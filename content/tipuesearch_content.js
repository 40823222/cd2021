var tipuesearch = {"pages": [{'title': 'About', 'text': '我的倉儲: https://github.com/40823222/cd2021 \n 我的網站: https://40823222.github.io/cd2021 \n gitter討論區: https://gitter.im/mdecourse/cd2021 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'W1', 'text': '建立網頁 \n 建立網頁 \n 下載\xa0 kmol2021_spring_v2.7z \xa0 \n \n 前往 https://github.com/mdecourse/cmstemplate \n 點選Use this template \n \n \n 建立倉儲名稱:cd2021 \n \n \n 建立完後前往Settings \n \n \n 點選Branch:main \n \n \n \n 開啟cmd，輸入cd tmp 案enter \n 輸入git clone --recurse-submodules\xa0 https://github.com/40823222/cd2021.git \n \n \n git clone完後 前往cd 2021 到cmsimde 輸入python wsgi.py \n Y:\\tmp\\cd2021\\cmsimde>python wsgi.py \n \n 進入個人網頁 輸入密碼 \n \n \n 編輯自己的個人網頁 \n \n', 'tags': '', 'url': 'W1.html'}, {'title': 'stage1-bg22', 'text': '題目:自動磨豆機 \n 動機:適合給予喜愛手沖咖啡的人。 \n 繪製組員:40823244 吳承翰 \n 程式模擬:40823222 曾喜賢 \n', 'tags': '', 'url': 'stage1-bg22.html'}, {'title': 'W2-W4', 'text': '二人一組 協同產品-自動磨豆機\xa0 \n 組員:40823222 (模擬) \n \xa0 \xa0 \xa0 \xa040823244 (繪圖) \n \n', 'tags': '', 'url': 'W2-W4.html'}, {'title': 'w1 小組討論', 'text': '題目:自動磨豆機 \n 動機:適合給予喜愛手沖咖啡的人。 \n 繪製組員:40823244 吳承翰 \n 程式模擬:40823222 曾喜賢 \n \n 3/11 零件圖檔 \n 自動磨豆機.zip \n 3/15 程式模擬 \n 模擬.ttt \n \n w1討論影片 \n \n \n \n \n', 'tags': '', 'url': 'w1 小組討論.html'}, {'title': 'w2 繪製圖檔', 'text': '\n 自動咖啡磨豆機繪製圖： \n \n 各部零件圖: \n 錐刀組 \n \n \n 錐刀組與外殼 \n \n \n 旋轉軸 \n \n \n 錐型進豆槽與外殼 \n \n \n 分量撥粉器 \n \n \n 漏斗 \n \n \n 上蓋 \n \n \n 裝粉盒 \n \n \n 外殼 \n \n \n', 'tags': '', 'url': 'w2 繪製圖檔.html'}, {'title': 'w3 程式模擬', 'text': '\n 程式模擬過程 \n \n 第一次測試影片-無法正常運作 \n \n \n 修改後的模擬 \n \n 模擬圖:shell-外殼、Upper_cover-上蓋、Body-本體、Revolute_joint-旋轉街頭、axis-旋轉軸 \n \n \n 模擬圖:shell-外殼、Upper_cover-上蓋、Body-本體、Revolute_joint-旋轉街頭、axis-旋轉軸 \n \n 本體的動態特性 \n 把Body is respondable 打勾 \n \n 旋轉接頭的連結特性 \n 設立一個馬達\xa0 \n \n \n \n 剛體的動態特性 \n 為了使物體能夠有作動，所以將Body is dynamic 打勾 \n \n \n 完成圖 \n \n \n \n', 'tags': '', 'url': 'w3 程式模擬.html'}, {'title': 'w4 小組報告', 'text': '40823244 吳承翰的介紹 \n \n \n \n 40823222 曾喜賢的報告 \n \n \n 自動磨豆機.pdf \n \n', 'tags': '', 'url': 'w4 小組報告.html'}, {'title': 'stage2-bg10', 'text': '組別:stage2-bg10 \n 組員: 40823202 黃詩云、40823203 潘奕瑄、40823222 曾喜賢、40823244 吳承翰 \n 主題:彈珠軌道 \n 研發動機:利用我們學過的原理製造出一台可以自行運作的機台出來玩。 \n 運用原理:1.運用阿基米得原理，讓彈珠可以沿著一個平面向上移動。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa02.運用凸輪原理，使其做一個上下的使其做一個上下的反覆運動，讓彈珠可以像爬階梯一樣。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa03.用圓盤的轉動，將球運送至彈珠台(控制圓盤的轉數去查看彈珠的運動軌跡)。 \n', 'tags': '', 'url': 'stage2-bg10.html'}, {'title': 'W5', 'text': '\n 2a小組影片時間表單 \n 利用程式 \n \n \n 使用黑窗 進入tmp輸入pip install moviepy時的問題 \n \n \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W6-W9', 'text': '協同產品設計 \n 四人小組 \n 組員:40823202 黃詩云 ( 倉儲 ) ( 網站 ) \n \xa0 \xa0 \xa0 \xa040823203 潘奕瑄 ( 倉儲 ) ( 網站 ) \n \xa0 \xa0 \xa0 \xa040823222 曾喜賢 ( 倉儲 ) ( 網站 ) \n \xa0 \xa0 \xa0 \xa040823244 吳承翰\xa0 ( 倉儲 ) ( 網站 ) \n \n \n \n 組別:stage2-bg10 \n 組員: 40823202 黃詩云、40823203 潘奕瑄、40823222 曾喜賢、40823244 吳承翰 \n 主題:彈珠軌道 \n 研發動機:利用我們學過的原理製造出一台可以自行運作的機台出來玩。 \n 運用原理:1.運用阿基米得原理，讓彈珠可以沿著一個平面向上移動。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa02.運用凸輪原理，使其做一個上下的使其做一個上下的反覆運動，讓彈珠可以像爬階梯一樣。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa03.用圓盤的轉動，將球運送至彈珠台(控制圓盤的轉數去查看彈珠的運動軌跡)。 \n \n \n \n', 'tags': '', 'url': 'W6-W9.html'}, {'title': '零件圖', 'text': '第一版本 \n \n \n 第二版本 \n 零件下載： 點我 . \n 組合圖： \n \n \n \n 個別零件： \n 底座 \n \n \n 彈珠檯： \n \n \n 阿基米德螺旋桿： \n \n \n 凸輪機構： \n \n \n 往復機構4個： \n \n \n 圓盤 \n \n', 'tags': '', 'url': '零件圖.html'}, {'title': '模擬', 'text': '第一版 \n 第一版 \n 問題:他跑出兩個東西，後來發現多匯入了一個組合圖。 \n 解決:將組合體的零件刪除。 \n \n 第二版 \n 問題:方塊好像沒有受到旁邊的約束，導致方塊會亂跳。 \n \xa0 \xa0 \xa0 \xa0圓盤的方向做錯。 \n 解決:在方塊旁加板子。 \n \xa0 \xa0 \xa0 \xa0改圓盤方向。 \n \n 第三版 \n 問題:從凸輪到圓盤之間的軌道做得太中間使求無法順利通過。 \n 解決:將軌道向左偏移。 \n \n 第四版 \n 問題:圓盤的縫隙問題導致求無法順利從圓盤上掉落。 \n 解決:改善圓盤的縫隙。 \n \n 第五次 \n 問題:阿基米得螺旋桿的斜度太斜導致無法讓球上升 \n 解決:改斜度(我們10度改到17度)但還是無法上去，所以我們決定繼續利用這些裝置原理，但把圖改成另一種模式。 \n \n 最後圖改成: \n \n 第二版 \n 彈珠軌道程式模擬: \n 圓盤 \n \n \n 阿基米德螺旋桿 \n \n \n 凸輪+往復機構 \n \n \n 第一次模擬，零件都會亂作動。 \n 第一次模擬.ttt \n \n \n 第二次模擬，設定好零件的可碰撞時，變可正常運作。 \n 問題：圓盤與彈珠台進入口的間隙過大，導致於彈珠無法順利進入彈珠檯裡面。 \n 第二次模擬.ttt \n \n \n \n \n 最後模擬：因此修改圖檔，將圓盤放大並把進入口的斜角增大，最後彈珠能順利進入彈珠檯裡面。 \n \n 最終模擬.ttt \n', 'tags': '', 'url': '模擬.html'}, {'title': '影片錄製', 'text': '零件繪製以介紹 \n \n', 'tags': '', 'url': '影片錄製.html'}, {'title': '參考資料', 'text': '凸輪機構 \n \n http://www.pmai.tn.edu.tw/df_ufiles/df_pics/32710%E7%AC%AC13%E7%AB%A0.pdf \n \n 阿基米得原理 \n \n https://kknews.cc/zh-tw/news/vj3e3y.html \n \n \n 圓盤 \n \n \n', 'tags': '', 'url': '參考資料.html'}, {'title': 'stage3-bg3', 'text': '\n', 'tags': '', 'url': 'stage3-bg3.html'}, {'title': 'Task 1', 'text': 'stage3-bg1 repo  |  stage3-bg1 site  |  40823245 repo  |  40823245 site  |  40823251 repo  |  40823251 site  |  40823208 repo  |  40823208 site  |  40823213 repo  |  40823213 site  |  40823232 repo  |  40823232 site  |  40823234 repo  |  40823234 site  |  40823235 repo  |  40823235 site  |  40823246 repo |  40823246 site ---------- stage3-bg2 repo  |  stage3-bg2 site  |  40823217 repo  |  40823217 site  |  40823201 repo  |  40823201 site  |  40823209 repo  |  40823209 site  |  40823210 repo  |  40823210 site  |  40823206 repo  |  40823206 site  |  40823207 repo  |  40823207 site  |  40823223 repo  |  40823223 site  |  40823224 repo |  40823224 site ---------- stage3-bg3 repo  |  stage3-bg3 site  |  40823236 repo  |  40823236 site  |  40823202 repo  |  40823202 site  |  40823203 repo  |  40823203 site  |  40823212 repo  |  40823212 site  |  40823219 repo  |  40823219 site  |  40823222 repo  |  40823222 site  |  40823231-2 repo  |  40823231-2 site  |  40823244 repo |  40823244 site ---------- stage3-bg4 repo  |  stage3-bg4 site  |  40823239 repo  |  40823239 site  |  s40723140 repo  |  s40723140 site  |  s40723128 repo  |  s40723128 site  |  s40723139 repo  |  s40723139 site  |  s40723106 repo  |  s40723106 site  |  s40723135 repo  |  s40723135 site  |  s40723143 repo  |  s40723143 site  |  s40723215 repo |  s40723215 site ---------- stage3-bg5 repo  |  stage3-bg5 site  |  40823221 repo  |  40823221 site  |  40823204 repo  |  40823204 site  |  40823205 repo  |  40823205 site  |  40823220 repo  |  40823220 site  |  40823228 repo  |  40823228 site  |  40823237 repo  |  40823237 site  |  40823242 repo  |  40823242 site  |  40823250 repo |  40823250 site  |  40832244 repo |  40832244 site ---------- stage3-bg6 repo  |  stage3-bg6 site  |  40823225 repo  |  40823225 site  |  40823214 repo  |  40823214 site  |  40823218 repo  |  40823218 site  |  40823211 repo  |  40823211 site  |  40823248 repo  |  40823248 site  |  40823247 repo  |  40823247 site  |  40823216 repo  |  40823216 site  |  40823238 repo |  40823238 site ---------- stage3-bg7 repo  |  stage3-bg7 site  |  40623144 repo  |  40623144 site  |  40823233 repo  |  40823233 site  |  s40723224 repo  |  s40723224 site  |  40823241 repo  |  40823241 site  |  40423155 repo  |  40423155 site  |  40823227 repo  |  40823227 site  |  s40723233 repo  |  s40723233 site ---------- \n \n', 'tags': '', 'url': 'Task 1.html'}, {'title': 'Task 2', 'text': '使用api鍵盤控制。 \n \n import sim as vrep\nimport math\nimport random\nimport time\nimport keyboard\n \nprint (\'Start\')\n \n# Close eventual old connections\nvrep.simxFinish(-1)\n# Connect to V-REP remote server\nclientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5)\n  \nif clientID !=-1:\n    print (\'Connected to remote API server\')\n   \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823222",\n        vrep.simx_opmode_oneshot)\n          \n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n          \n    opmode = vrep.simx_opmode_oneshot_wait\n     \n    vrep.simxStartSimulation(clientID, opmode)\n    ret,shaft1=vrep.simxGetObjectHandle(clientID,"shaft_1",opmode)\n    ret,shaft2=vrep.simxGetObjectHandle(clientID,"shaft_2",opmode)\n    ret,shaft3=vrep.simxGetObjectHandle(clientID,"shaft_3",opmode)\n\n    while True:\n        if keyboard.is_pressed("q"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft1,0.15,opmode)\n            print("w")\n            \n        if keyboard.is_pressed("w"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft1,0,opmode)\n            print("s")\n            \n        if keyboard.is_pressed("a"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft2,0.5,opmode)\n            print("a")\n\n        if keyboard.is_pressed("s"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft2,0,opmode)\n            print("b")\n            \n        if keyboard.is_pressed("z"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft3,0.3,opmode)\n            print("c")\n\n        if keyboard.is_pressed("x"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft3,0,opmode)\n            print("z")            \nelse:\n    print (\'Failed connecting to  remote API server\')\n    print (\'End\') \n', 'tags': '', 'url': 'Task 2.html'}, {'title': 'RoboDK', 'text': '測試RoBoDK \n 使用python時，注意路徑是否要做修正。 \n \n \n 設置API網路的IP，依每個人的電腦IP位置，將pick_and_place.py 拉到白窗，並看到robodk_ip進行修改。 \n \n \n \n \n \n \n', 'tags': '', 'url': 'RoboDK.html'}, {'title': '學習python', 'text': '1.Setting（設定引入一些庫函式等、引數等） 2.Init（關閉其他連線、通訊檢測） 3.Configuration（配置控制代碼，設定同步模式等） 4.Simulation（設定模擬引數） 5.CoreControl （在模擬大迴圈裡面寫規劃與控制） \n \n Step1. Setting \n \n Step2. Init \n \n Step3. Configuration \n \n Step4：Simulation \n \n Step5. CoreControl \n \n', 'tags': '', 'url': '學習python.html'}, {'title': 'W16', 'text': '1.onshape零件檔： Onshape零件圖網址 \n \n \n 2.建立 CoppeliaSim 4.1.0 MTB robot 場景 雲端連結W16_exam： \n W16_exam 雲端硬碟 \n \n 3.吸盤設置 \n \n \n 4.逆向運動學函式 lua程式： \n \n function moving(x,y)\n    a=0.4\n    b=0.4\n    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n    s=(a+b+c)/2\n    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n    h=area/(2*c)\n    deg1_base=math.atan(x/y)\n    if x<0 and y<0 then\n        deg1_base=deg1_base+math.pi\n    end\n    deg1_tri=math.asin(h/a)\n    deg1=deg1_base+deg1_tri\n    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n    deg3=deg2-deg1\n    sim.setJointTargetPosition(joint01,deg1)\n    sim.setJointTargetPosition(joint02,-deg2)\n    sim.setJointTargetPosition(joint03,deg3)\nend\n\n\nfunction sysCall_threadmain()\n    joint01=sim.getObjectHandle(\'joint1\')\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.1)\n    sim.wait(5)\n    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do\n        sim.setJointTargetPosition(jointz,0)\n        moving(0.2,0.7)\n        sim.wait(5)\n        sim.setIntegerSignal("pad_switch",0)\n        sim.wait(5)\n        sim.setIntegerSignal("pad_switch",1)\n        sim.wait(5)\n        sim.setJointTargetPosition(jointz,-0.1)\n        sim.wait(5)\n        sim.setJointTargetPosition(jointz,0)\n        sim.wait(5)\n        moving(-0.3,-0.55)\n        sim.wait(5)\n        sim.setIntegerSignal("pad_switch",0)\n        sim.wait(5)\n        sim.setIntegerSignal("pad_switch",1)\n        sim.wait(5)\n        sim.setJointTargetPosition(jointz,-0.1)\n        sim.wait(5)\n        sim.setJointTargetPosition(jointz,0)\n        sim.wait(5)\n        end\nend\n\nfunction sysCall_cleanup()\n    -- Put some clean-up code here\nend\n\n-- See the user manual or the available code snippets for additional callback functions and details\n \n \n sim.getObjectHandle(\'joint1\') \n sim.getOjectHandle (\'\xa0 \') 是指處理物件的相關。 \n \n sim.setJointTargetPosition(joint01,deg1) \n sim.setJointTargetPosition(\xa0 ,\xa0 )\xa0 是指設定軸的目標位置(上方處理完的物件 , 給予速度或是其他的條件 )。 \n  while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do \n 循環的程式瑪 \n 鍵盤控制： \n \n function sysCall_init()\n    joint01=sim.getObjectHandle(\'joint1\')\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    deg1=0\n    deg2=0\n    deg3=0\nend\n\nfunction sysCall_actuation()\n    message,auxiliaryData=sim.getSimulatorMessage()\n    while message~=-1 do\n        if (message==sim.message_keypress) then\n            if (auxiliaryData[1]==97) then\n            deg1=deg1+1\n            sim.setJointTargetPosition(joint01,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==100) then\n            deg1=deg1-1\n            deg3=deg2-deg1\n            sim.setJointTargetPosition(joint01,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==119) then\n            deg2=deg2+1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint02,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==115) then\n            deg2=deg2-1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint02,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==2008) then\n                sim.setJointTargetPosition(jointz,-0.1)\n                sim.setIntegerSignal("pad_switch",1)\n            end\n            if(auxiliaryData[1]==2007) then\n                sim.setJointTargetPosition(jointz,0)\n            end\n            if(auxiliaryData[1]==32) then\n                sim.setIntegerSignal("pad_switch",0)\n            end\n            sim.setJointTargetPosition(joint03,deg3*math.pi/180)\n        end\n    message,auxiliaryData=sim.getSimulatorMessage()\n    end\nend\n \n message,auxiliaryData=sim.getSimulatorMessage() \n 是指訊息 , 輔助參數或是數據 = 模擬得到模擬器訊息。 \n while message ~= -1 do \n 是指當訊息為非 -1 得做以下的。 \n \n 5.Python remote API \n \n \n import sim as vrep\nimport math\nimport random\nimport time\nimport math\n\ndef moving(x,y):\n        a=0.4\n        b=0.4\n        c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n        s=(a+b+c)/2\n        area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n        h=area/(2*c)\n        deg1_base=math.atan(x/y)\n        if x<0 and y<0 :\n            deg1_base=deg1_base+math.pi\n        deg1_tri=math.asin(h/a)\n        deg1=deg1_base+deg1_tri\n        deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n        deg3=deg2-deg1\n        vrep.simxSetJointTargetPosition(clientID,joint01,deg1,opmode)\n        vrep.simxSetJointTargetPosition(clientID,joint02,-deg2,opmode)\n        vrep.simxSetJointTargetPosition(clientID,joint03,deg3,opmode)\n        \n\nprint (\'Start\')\n \nvrep.simxFinish(-1)\n \nclientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5)\n\nif clientID != -1:\n    print (\'Connected to remote API server\')\n\n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823222 ",\n        vrep.simx_opmode_oneshot)\n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n\n\n    opmode = vrep.simx_opmode_oneshot_wait\n    STREAMING = vrep.simx_opmode_streaming\n\n\n    vrep.simxStartSimulation(clientID, opmode)\n    ret,joint01=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\n    ret,joint02=vrep.simxGetObjectHandle(clientID,"joint2",opmode)\n    ret,joint03=vrep.simxGetObjectHandle(clientID,"joint3",opmode)\n    ret,jointz=vrep.simxGetObjectHandle(clientID,"jointz",opmode)\n    \n    vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)\n    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n    vrep.simxSetJointTargetPosition(clientID,jointz,-0.1,opmode)\n    time.sleep(3)\n    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n    while True:\n        moving(0.2,0.7)\n        time.sleep(3)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\n        time.sleep(3)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n        vrep.simxSetJointTargetPosition(clientID,jointz,-0.1,opmode)\n        time.sleep(3)\n        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n        moving(-0.3,-0.55)\n        time.sleep(3)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\n        time.sleep(3)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n        vrep.simxSetJointTargetPosition(clientID,jointz,-0.1,opmode)\n        time.sleep(3)\n        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n     \n \n 40823214 直播教學影片： \n  ', 'tags': '', 'url': 'W16.html'}, {'title': 'stage3模擬', 'text': 'stage3模擬，但模擬過程中，一開始的擊球機構沒控制好的話會把球彈到後面去，這邊還需要修改一下，這次是用lua的程式碼下去，可以用鍵盤控制，分別是q、p、a、;、z、.。 \n \n \n import sim as vrep\nimport math\nimport random\nimport time\nimport keyboard\n \nprint (\'Start\')\n \n# Close eventual old connections\nvrep.simxFinish(-1)\n# Connect to V-REP remote server\nclientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5)\n  \nif clientID !=-1:\n    print (\'Connected to remote API server\')\n   \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823222",\n        vrep.simx_opmode_oneshot)\n          \n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n          \n    opmode = vrep.simx_opmode_oneshot_wait\n     \n    vrep.simxStartSimulation(clientID, opmode)\n    ret,shaft1=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\n    ret,shaft2=vrep.simxGetObjectHandle(clientID,"joint2",opmode)\n    ret,shaft3=vrep.simxGetObjectHandle(clientID,"joint3",opmode)\n\n    while True:\n        if keyboard.is_pressed("q"):\n            vrep.simxSetJointTargetPosition(clientID,shaft1,-200,opmode)\n            print("q")\n            \n        if keyboard.is_pressed("p"):\n            vrep.simxSetJointTargetPosition(clientID,shaft1,200,opmode)\n            print("p")\n            \n        if keyboard.is_pressed("a"):\n            vrep.simxSetJointTargetPosition(clientID,shaft2,90,opmode)\n            print("a")\n\n        if keyboard.is_pressed(";"):\n            vrep.simxSetJointTargetPosition(clientID,shaft2,0,opmode)\n            print(";")\n            \n        if keyboard.is_pressed("z"):\n            vrep.simxSetJointTargetPosition(clientID,shaft3,90,opmode)\n            print("z")\n\n        if keyboard.is_pressed("."):\n            vrep.simxSetJointTargetPosition(clientID,shaft3,0,opmode)\n            print(".")            \nelse:\n    print (\'Failed connecting to  remote API server\')\n    print (\'End\') \n \n if keyboard.is_pressed("q"):  vrep.simxSetJointTargetPosition(clientID,shaft1,-200,opmode) \n 假設說按鍵按q的話，shaft1的旋轉軸會移動角度到-200度。 \n', 'tags': '', 'url': 'stage3模擬.html'}, {'title': 'w18', 'text': '', 'tags': '', 'url': 'w18.html'}, {'title': '直播影片', 'text': '', 'tags': '', 'url': '直播影片.html'}]};